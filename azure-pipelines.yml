# # azure-pipelines.yml
# trigger:
# - main  # Adjust this to the branch you want to trigger the pipeline

# pool:
#   name: 'Crudexampleagentpool'

#   vmImage: 'ubuntu-latest'  # Use Ubuntu to avoid Windows-specific issues

# steps:
# - checkout: self
#   displayName: 'Checkout Code'

# - task: UsePythonVersion@0
#   inputs:
#     versionSpec: '3.8'  # Specify a specific Python version, e.g., '3.8'
#     addToPath: true

# - script: python -m venv venv
#   displayName: 'Create Virtual Environment'

# - script: |
#     source venv/bin/activate
#     pip install --upgrade pip
#     pip install -r requirements.txt
#     pip install pytest 
#     pip list
#   displayName: 'Install Dependencies'

# - script: |
#     source venv/bin/activate
#     pytest
#   displayName: 'Run Tests'

# # - stage: Deploy
# #   dependsOn: []  # No dependencies in this simplified example
# #   jobs:
# #   - job: Deploy
# #     displayName: 'Deploy Job'
# #     pool:
# #       name: 'Default'
# #       vmImage: 'ubuntu-latest'  # Ensure the deployment job uses the same pool
# #     steps:
# #     - script: echo 'Deploying to environment...'
# #       displayName: 'Deploy Step'

#     # Example of using a task in the deployment stage
#     # - task: SomeAzureTask@1  # Replace with a real task
#     #   inputs:
#     #     someInput: someValue

# azure-pipelines.yml

trigger:
- main  # Adjust this to the branch you want to trigger the pipeline

pool:
  name: 'Crudexampleagentpool'
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  displayName: 'Checkout Code'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'  # Specify the Python version, e.g., '3.8'
    addToPath: true

- script: |
    python --version
    pytest --version
    python -m venv venv
    source venv/bin/activate
    pip install --upgrade pip
    pip install pytest
    pip install -r requirements.txt
  displayName: 'Install Dependencies and Verify Python Environment'
- task: lambda3docker@0
  inputs:
    command: 'build'
    imageBuild: 'crudexample1-backend'
# - script: |
#     source venv/bin/activate
#     pytest 
#   displayName: 'Run Tests'

# - script: |
#     deactivate  # Deactivate virtual environment
#   displayName: 'Deactivate Virtual Environment'
